<?xml version="1.0" encoding="utf-8" standalone="no"?><metadata xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="fileqa_metadata.xsd">
  <file>
    <description>Testing the artifact "US_DRUG_EXT_DESCRIPTIONS".</description>
    <regex>
      <test>FileNameTest</test>
      <expression>(x|y)us_drug_ext_descriptions.*_20\d{6}\.txt</expression>
      <description>the file name matches the expression</description>
      <successMessage>The file name matches the expression</successMessage>
      <failureMessage>The file name does not match the expression</failureMessage>
    </regex>
    <delimiter>\t</delimiter>
    <newline>\r\n</newline>
    <encoding>UTF-8</encoding>
    <carryForward>false</carryForward>
	</file>
    <column header="DESCRIPTIONID">			
			<header>DESCRIPTIONID</header>
			<position>1</position>
			
			<regex>
				<test>ColumnNullTest</test>
				<expression>.*</expression> <!-- NOT NULLABLE -->
				<description>Column is null or not as specified</description>
				<successMessage>Column is not nullable</successMessage>
				<failureMessage>Column is nullable</failureMessage>
			</regex>
			
			<regex>
				<test>ColumnTypeTest</test>
				<expression>^\d+$</expression> <!-- NUMBER -->
				<description>Column type is valid for column</description>
				<successMessage>Data type is valid for column</successMessage>
				<failureMessage>Data type is not valid for column</failureMessage>
			</regex>
			
			<regex>
				<test>ColumnWidthTest</test>
				<expression>^.{6,18}$</expression>
				<description>Values are between 6 and 18 characters long</description>
				<successMessage>Values are between 6 and 18 characters long</successMessage>
				<failureMessage>Values are not between 6 and 18 characters long</failureMessage>
			</regex>
			
			<regex>
				<test>ColumnValidTest</test>
				<expression>^\d+$</expression>
				<description>Values in the column are valid</description>
				<successMessage>Column contains valid values</successMessage>
				<failureMessage>Column contains invalid values</failureMessage>
			</regex>
		</column>
    <column header="DESCRIPTIONSTATUS">			
			<header>DESCRIPTIONSTATUS</header>
			<position>2</position>
			
			<regex>
				<test>ColumnNullTest</test>
				<expression>.*</expression> <!-- NOT NULLABLE -->
				<description>Column is null or not as specified</description>
				<successMessage>Column is not nullable</successMessage>
				<failureMessage>Column is nullable</failureMessage>
			</regex>
			
			<regex>
				<test>ColumnTypeTest</test>
				<expression>^\d+$</expression> <!-- NUMBER -->
				<description>Column type is valid for column</description>
				<successMessage>Data type is valid for column</successMessage>
				<failureMessage>Data type is not valid for column</failureMessage>
			</regex>
			
			<regex>
				<test>ColumnWidthTest</test>
				<expression>^.{1,2}$</expression>
				<description>Values are between 1 and 2 characters long</description>
				<successMessage>Values are between 1 and 2 characters long</successMessage>
				<failureMessage>Values are not between 1 and 2 characters long</failureMessage>
			</regex>
			
			<regex>
				<test>ColumnValidTest</test>
				<expression>0|1|2|3|5|6|7|8|10|11</expression>
				<description>Values in the column are valid</description>
				<successMessage>Column contains valid values</successMessage>
				<failureMessage>Column contains invalid values</failureMessage>
			</regex>
		</column>
    <column header="CONCEPTID">			
			<header>CONCEPTID</header>
			<position>3</position>
			
			<regex>
				<test>ColumnNullTest</test>
				<expression>.*</expression> <!-- NOT NULLABLE -->
				<description>Column is null or not as specified</description>
				<successMessage>Column is not nullable</successMessage>
				<failureMessage>Column is nullable</failureMessage>
			</regex>
			
			<regex>
				<test>ColumnTypeTest</test>
				<expression>^\d+$</expression> <!-- NUMBER -->
				<description>Column type is valid for column</description>
				<successMessage>Data type is valid for column</successMessage>
				<failureMessage>Data type is not valid for column</failureMessage>
			</regex>
			
			<regex>
				<test>ColumnWidthTest</test>
				<expression>^.{6,18}$</expression>
				<description>Values are between 6 and 18 characters long</description>
				<successMessage>Values are between 6 and 18 characters long</successMessage>
				<failureMessage>Values are not between 6 and 18 characters long</failureMessage>
			</regex>
			
			<regex>
				<test>ColumnValidTest</test>
				<expression>^\d+$</expression>
				<description>Values in the column are valid</description>
				<successMessage>Column contains valid values</successMessage>
				<failureMessage>Column contains invalid values</failureMessage>
			</regex>
		</column>
    <column header="TERM">			
			<header>TERM</header>
			<position>4</position>
			
			<regex>
				<test>ColumnNullTest</test>
				<expression>.*</expression> <!-- NOT NULLABLE -->
				<description>Column is null or not as specified</description>
				<successMessage>Column is not nullable</successMessage>
				<failureMessage>Column is nullable</failureMessage>
			</regex>
			
			<regex>
				<test>ColumnTypeTest</test>
				<expression>.*</expression> <!-- STRING -->
				<description>Column type is valid for column</description>
				<successMessage>Data type is valid for column</successMessage>
				<failureMessage>Data type is not valid for column</failureMessage>
			</regex>
			
			<regex>
				<test>ColumnWidthTest</test>
				<expression>^.{1,255}$</expression>
				<description>Values are between 1 and 255 characters long</description>
				<successMessage>Values are between 1 and 255 characters long</successMessage>
				<failureMessage>Values are not between 1 and 255 characters long</failureMessage>
			</regex>
			
			<regex>
				<test>ColumnValidTest</test>
				<expression>.*</expression>
				<description>Values in the column are valid</description>
				<successMessage>Column contains valid values</successMessage>
				<failureMessage>Column contains invalid values</failureMessage>
			</regex>
		</column>
    <column header="INITIALCAPITALSTATUS">			
			<header>INITIALCAPITALSTATUS</header>
			<position>5</position>
			
			<regex>
				<test>ColumnNullTest</test>
				<expression>.*</expression> <!-- NOT NULLABLE -->
				<description>Column is null or not as specified</description>
				<successMessage>Column is not nullable</successMessage>
				<failureMessage>Column is nullable</failureMessage>
			</regex>
			
			<regex>
				<test>ColumnTypeTest</test>
				<expression>^\d+$</expression> <!-- NUMBER -->
				<description>Column type is valid for column</description>
				<successMessage>Data type is valid for column</successMessage>
				<failureMessage>Data type is not valid for column</failureMessage>
			</regex>
			
			<regex>
				<test>ColumnWidthTest</test>
				<expression>^.{1,1}$</expression>
				<description>Values are between 1 and 1 characters long</description>
				<successMessage>Values are between 1 and 1 characters long</successMessage>
				<failureMessage>Values are not between 1 and 1 characters long</failureMessage>
			</regex>
			
			<regex>
				<test>ColumnValidTest</test>
				<expression>0|1</expression>
				<description>Values in the column are valid</description>
				<successMessage>Column contains valid values</successMessage>
				<failureMessage>Column contains invalid values</failureMessage>
			</regex>
		</column>
    <column header="DESCRIPTIONTYPE">			
			<header>DESCRIPTIONTYPE</header>
			<position>6</position>
			
			<regex>
				<test>ColumnNullTest</test>
				<expression>.*</expression> <!-- NOT NULLABLE -->
				<description>Column is null or not as specified</description>
				<successMessage>Column is not nullable</successMessage>
				<failureMessage>Column is nullable</failureMessage>
			</regex>
			
			<regex>
				<test>ColumnTypeTest</test>
				<expression>^\d+$</expression> <!-- NUMBER -->
				<description>Column type is valid for column</description>
				<successMessage>Data type is valid for column</successMessage>
				<failureMessage>Data type is not valid for column</failureMessage>
			</regex>
			
			<regex>
				<test>ColumnWidthTest</test>
				<expression>^.{1,1}$</expression>
				<description>Values are between 1 and 1 characters long</description>
				<successMessage>Values are between 1 and 1 characters long</successMessage>
				<failureMessage>Values are not between 1 and 1 characters long</failureMessage>
			</regex>
			
			<regex>
				<test>ColumnValidTest</test>
				<expression>0|1|2|3</expression>
				<description>Values in the column are valid</description>
				<successMessage>Column contains valid values</successMessage>
				<failureMessage>Column contains invalid values</failureMessage>
			</regex>
		</column>
    <column header="LANGUAGECODE">			
			<header>LANGUAGECODE</header>
			<position>7</position>
			
			<regex>
				<test>ColumnNullTest</test>
				<expression>.*</expression> <!-- NOT NULLABLE -->
				<description>Column is null or not as specified</description>
				<successMessage>Column is not nullable</successMessage>
				<failureMessage>Column is nullable</failureMessage>
			</regex>
			
			<regex>
				<test>ColumnTypeTest</test>
				<expression>.*</expression> <!-- STRING -->
				<description>Column type is valid for column</description>
				<successMessage>Data type is valid for column</successMessage>
				<failureMessage>Data type is not valid for column</failureMessage>
			</regex>
			
			<regex>
				<test>ColumnWidthTest</test>
				<expression>^.{1,8}$</expression>
				<description>Values are between 1 and 8 characters long</description>
				<successMessage>Values are between 1 and 8 characters long</successMessage>
				<failureMessage>Values are not between 1 and 8 characters long</failureMessage>
			</regex>
			
			<regex>
				<test>ColumnValidTest</test>
				<expression>^(en-GB|en-US|en)$</expression>
				<description>Values in the column are valid</description>
				<successMessage>Column contains valid values</successMessage>
				<failureMessage>Column contains invalid values</failureMessage>
			</regex>
		</column>
  
</metadata>